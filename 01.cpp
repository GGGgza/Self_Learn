//01 C++工作逻辑

#include <iostream> //这句话是预处理语句，#之后都是预处理的，在编译之前就发生了
                    //include 的含义就是他需要找到一个文件，在这个函数里面，他就是找到<iostream>这个文件
                    //然后将这个文件里面的内容复制到现在这个文件里 
                    ///这些所包好的函数文件，通常叫做头文件（Hearder Files）

/* #include "log.h"

                这个也是头文件
                和上面的头文件区别是使用 “ ” / < >   。
                < > 尖括号的头文件的含有是只作用与编译器包含路径下的，主要使用尖括号
                “ ” 双引号的头文件可以在任意文件目录下，可以作用于绝对路径或者相对路径，一般相对路径较多

                iostream头文件和log.h文件有所区别在于io...没有拓展名（.h）。用以表示C++标准库和C标准库的区分
                c标准库通常会有.h扩展，而C++没有
*/


static int multiply(int a , int b)          //这里的static前置，会让“multiply”这个函数只被声明在这个编译单元内
{
    return a * b;
}


int main()                                          //此处理论上应该返回Int ，但是Main函数比较特殊，他不一定需要返回值，如果没给返回值的话会返回0。只对Main函数适用。
{
	std::cout << "HelloWorld!" << std::endl;        //<< ... << 这里的"<<" 是一个重载运算符函数，在这个例子中，它和cout.print 一个意思。 std::cout.print("HelloWorld!").print(std::endl)
                                                    //在这句话里，相当于是将HelloWorld推送到cout流中，然后打印到终端。然后再推送一个行结束符（endl），告诉终端可以跳转到下一行了
	std::cin.get();                                 //cin.get函数是等待我们按下回车，在前往下一句代码前等待，这个时候代码暂停直到我们按下回车后
                                                    //在这里没有下一行了，所以函数会返回一个0，意味着代码执行完毕。
}